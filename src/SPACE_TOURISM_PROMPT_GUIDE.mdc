---
description: 
globs: 
alwaysApply: false
---
# 우주관광 서비스 랜딩 페이지 프롬프트 가이드

이 가이드는 **기존에 준비된 인프라**(MUI + 테마, @/patterns 컴포넌트, @/data 기획 데이터, 이미지)를 기반으로 디자이너가 프롬프트만으로 우주관광 서비스 랜딩 페이지를 완성할 수 있도록 구성되었습니다.

## 1. Cursor Rules 설정

먼저 `.cursorrules` 파일에 다음 내용을 추가해주세요:

```
# 우주관광 서비스 랜딩 페이지 프로젝트 규칙

## 프로젝트 특성
- 우주관광 서비스를 위한 랜딩 페이지
- 다크 테마 + 테크 기업 느낌의 미래적 디자인
- 글래스모피즘/리퀴드 글래스 스타일로 배경과 블렌딩
- 단순하고 여백을 과감하게 사용하는 레이아웃
- 곡율이 있는 컨테이너 + 각진 버튼 스타일

## 핵심 컴포넌트 활용
- ParticleBackground: 전체 배경 인터랙션 처리
- ScrambleText: 메인 타이틀 효과
- TypingEffect: 서브 텍스트 애니메이션  
- MUI Grid v7: size prop으로 반응형 레이아웃
- 글래스모피즘: backdrop-filter: blur(60px), rgba 투명도


## 색상 시스템
- 배경색/파티클색 조합으로 섹션별 분위기 연출
- #000011/#ADD8E6 (메인), #0A0A14/#C0C0C0 (루나)
- #140A0A/#FF6B47 (마션), #0A0A0F/#9370DB (스텔라)
- #000011/#FFFFFF (예약)

## 데이터 구조 활용
- spacecraftData: 우주선 정보 (title, description, features, imagePosition)
- sectionsData: 섹션별 컴포넌트와 배경 설정
- 이미지: @/assets/space/1.png, 2.png, 3.png
```


## 2. 기존 데이터 × 컴포넌트 조합 구성 

### 2-1. 메인 페이지 구조 설정

```
우주관광 랜딩 페이지의 메인 컴포넌트를 만들어줘.

전체 구조:
- 파티클 배경으로 전체 페이지를 감싸서 인터랙티브한 우주 느낌 연출
- 총 5개 섹션을 순차적으로 배치: 메인 타이틀 + 우주선 소개 3개 + 예약 섹션
- HeroSection, ShuttleSection X [sectionsData.js](mdc:src/data/sectionsData.js) , ReservationSection
- 각 우주선 섹션에는 준비된 우주선 데이터를 순서대로 연결
```



### 2-2. 파티클 배경 인터랙션 설정

```
배경 파티클 시스템을 다음 색상 조합으로 설정해줘:

[ParticleBackground.jsx](mdc:src/components/patterns/visualHook/ParticleBackground.jsx) X [sectionsData.js](mdc:src/data/sectionsData.js) 와 각 섹션 컴퍼넌트들을 조합.
스크롤할 때마다 배경과 파티클이 부드럽게 전환되어 각 섹션의 분위기를 강화해줘.
```

## 3. 새로 추가할 컴포넌트 × 데이터 조합

### 3-1. 메인 타이틀 섹션 생성

```
첫 번째 히어로 섹션을 만들어줘.

디자인 요구사항:
- "REACH THE STARS" 메인 타이틀을 스크램블 텍스트 효과로 표시
- 서브 텍스트는 타이핑 효과로 천천히 나타나게 연출
- 전체 화면 높이로 설정하고 중앙 정렬
- 글래스모피즘 스타일을 적용해서 배경과 자연스럽게 블렌딩
- 다크 테마에 맞는 미래적이고 세련된 색상 구성
```

### 3-2. 우주선 소개 섹션 개선

```
기존 우주선 소개 섹션을 다음 요구사항으로 업그레이드해줘:

데이터 연동:
- 준비된 우주선 데이터의 이미지 위치 설정에 따라 좌우 레이아웃 자동 변경
- 우주선 특징들을 세련된 칩 형태로 표시 (아이콘 없이 텍스트만)
- 우주선 이름을 스크램블 텍스트 효과로 강렬하게 표현

비주얼 디자인:
- 이미지 영역은 둥근 모서리의 글래스모피즘 컨테이너로 감싸기
- 반응형으로 텍스트 크기와 레이아웃이 자동 조정되도록 설정
- 모바일에서는 설명 텍스트 숨기고, 특징 칩들은 가로 스크롤 가능하게 배치

--
*실제 강의중 실행한 부분
[ShuttleSection.jsx](mdc:src/components/sections/ShuttleSection.jsx) 의 CardUI의 텍스트, 이미지 컨테이너 비율을 6:4로 수정

이미지는 원본비율을 유지해줘.

@ShuttleSection.jsx 내부에 Chip 컴퍼넌트의 크기와 간격을 줄이고, 칩 배경을 더 투명하게 해줘.

칩안의 텍스트 분량도 줄여줘.
```
--

### 3-3. 예약 섹션 생성

```
우주 여행 예약을 위한 마지막 섹션을 만들어줘.

핵심 기능:
- 예약 관련 메인 메시지와 폼을 포함한 컨텐츠 섹션
- 사용자가 버튼에 마우스를 올리면 배경 파티클 색상이 극적으로 반전되는 인터랙션
- 글래스모피즘 스타일의 세련된 CTA 버튼
- 전체 화면 높이로 임팩트 있게 구성
- "우주 여행 예약하기"를 중심으로 한 감성적인 메시지 전달
```

**실제 강의중 입력한 프롬프트
@ReservationSection.jsx  사용자가 CTA 버튼에 마우스를 올리면 배경 파티클 색상이 극적으로 반전되는 인터랙션을 구현해줘.

1. CTA 버튼의 hover 인터랙션이 발생하면, 지정된 배경과 파티클색을 임의로 @ParticleBackground.jsx 에 전달하는 로직을 구현해줘.

2. 현재 예제에서는 배경과 전경이 반전되는, 하얀 배경, 검정 파티클을 전달해줘.

3. 이 인터랙션을 통해서 @ParticleBackground.jsx 의 원래 현재 섹션에서 지정한 배경.전경색을 hover가 발생하는 동안만 임시로 바꾸는 방식.

@ReservationSection.jsx 의 UI color로 바전을 시켜줘

@ReservationSection.jsx cta hover 인터랙션에 @ParticleBackground.jsx 가 반응하는 것은 확인하였으나,  컴퍼넌트 내부에 원래 하얀색이었던 텍스트와 UI도 검정색으로 반전시켰다가 hover가 끝나면 되돌리는 로직을 추가해줘.

### 3-4. 네비게이션 헤더 생성

```
상단 고정 네비게이션 헤더를 만들어줘.

브랜딩과 네비게이션:
- "REACH THE STAR" 브랜드 로고를 좌측에 배치
- 우측에는 각 섹션으로 이동할 수 있는 메뉴 구성: 탐험하기, 루나 여행, 마션 탐사, 스텔라 탐험, 예약하기
- 투명 배경에 글래스모피즘 효과로 배경과 자연스럽게 어우러지게 설정
- 각 메뉴 클릭 시 해당 섹션으로 부드럽게 스크롤 이동
```

## 4. 스타일링 및 시각 보정

### 4-1. 글래스모피즘 통일성 확보

```
모든 UI 요소의 글래스모피즘 효과를 일관되게 적용해줘:

글래스 효과 스타일:
- 반투명한 흰색 배경 (12% 투명도)
- 강한 블러 효과로 배경과 자연스럽게 블렌딩
- 둥근 모서리 (20px 반경)로 부드러운 느낌 연출
- 미세한 흰색 테두리로 경계 강조
- 내부 광택과 외부 그림자로 입체감 표현
```

### 4-2. 타이포그래피 일관성 조정

```
전체 텍스트 스타일을 통일감 있게 조정해줘:

텍스트 위계 설정:
- 메인 타이틀: 모바일 2rem → 데스크톱 4rem, 굵은 폰트
- 서브 타이틀: 모바일 0.9rem → 데스크톱 1.1rem, 중간 굵기
- 본문 텍스트: 모바일 0.8rem → 데스크톱 0.9rem, 가벼운 폰트
- 모든 텍스트는 흰색으로 통일하고 미세한 자간 조정으로 가독성 향상
```

## 5. 네비게이션 및 반응형 대응

### 5-1. 반응형 레이아웃 최적화

```
모든 섹션을 다양한 화면 크기에 최적화해줠:

반응형 설정:
- 컨테이너는 최대 너비로 설정하고 적절한 여백 확보
- 그리드 간격을 모바일과 데스크톱에서 다르게 적용
- 모바일에서는 이미지와 텍스트 순서를 사용성에 맞게 조정
- [ShuttleSection.jsx](mdc:src/components/sections/ShuttleSection.jsx) 은 모바일에서는 세로 레이아웃
- [ShuttleSection.jsx](mdc:src/components/sections/ShuttleSection.jsx) 은 모발에서 설명 생략, 태그는 무조건 한줄로 보이고 overflow 되었을 경우는 가로 스크롤로 넘기는 방식 (스크롤이 보여서는 안된다)
- 텍스트 영역에 충분한 패딩으로 읽기 편한 환경 제공
- [NavigationHeader.jsx](mdc:src/components/commons/navigation/NavigationHeader.jsx) 모바일에서는 Drawer 메뉴를 활용
```

### 5-2. 스크롤 네비게이션 구현

```
헤더 메뉴의 스크롤 네비게이션 기능을 구현해줘:

네비게이션 동작:
- 각 섹션에 고유한 식별자를 부여: 메인, 루나 탐사선, 마션 탐사선, 스텔라 탐사선, 예약
- 메뉴 클릭 시 해당 섹션으로 부드럽게 스크롤 이동
- 현재 보고 있는 섹션을 메뉴에서 하이라이트 표시
- 모바일에서는 햄버거 메뉴로 변경해서 공간 효율성 확보
```

## 6. 최종 통합 및 검증

```
전체 프로젝트를 완성하고 다음 사항들을 점검해줘:

완성도 체크리스트:
1. 파티클 배경이 스크롤에 따라 자연스럽게 색상 전환되는지 확인
2. 스크램블 텍스트와 타이핑 효과의 애니메이션 타이밍이 적절한지 조정
3. 글래스모피즘 효과가 배경과 조화롭게 블렌딩되는지 검증
4. 모든 섹션이 다양한 화면 크기에서 올바르게 표시되는지 테스트
5. 네비게이션 메뉴의 스크롤 이동 기능이 정확히 작동하는지 확인
6. 다크 테마 색상이 전체적으로 일관성 있게 적용되었는지 점검

필요한 경우 세부적인 조정을 통해 완성도를 높여줘.
```

---

이 가이드를 순차적으로 따라하면 기존 인프라를 최대한 활용하여 우주관광 서비스 랜딩 페이지를 완성할 수 있습니다.